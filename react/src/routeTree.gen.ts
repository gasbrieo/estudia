/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileUsernameImport } from './routes/profile/$username'
import { Route as QuizzesQuizIdIndexImport } from './routes/quizzes/$quizId/index'
import { Route as QuizzesQuizIdReviewImport } from './routes/quizzes/$quizId/review'
import { Route as QuizzesQuizIdChallengeImport } from './routes/quizzes/$quizId/challenge'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileUsernameRoute = ProfileUsernameImport.update({
  id: '/profile/$username',
  path: '/profile/$username',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesQuizIdIndexRoute = QuizzesQuizIdIndexImport.update({
  id: '/quizzes/$quizId/',
  path: '/quizzes/$quizId/',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesQuizIdReviewRoute = QuizzesQuizIdReviewImport.update({
  id: '/quizzes/$quizId/review',
  path: '/quizzes/$quizId/review',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesQuizIdChallengeRoute = QuizzesQuizIdChallengeImport.update({
  id: '/quizzes/$quizId/challenge',
  path: '/quizzes/$quizId/challenge',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/$username': {
      id: '/profile/$username'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof ProfileUsernameImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/$quizId/challenge': {
      id: '/quizzes/$quizId/challenge'
      path: '/quizzes/$quizId/challenge'
      fullPath: '/quizzes/$quizId/challenge'
      preLoaderRoute: typeof QuizzesQuizIdChallengeImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/$quizId/review': {
      id: '/quizzes/$quizId/review'
      path: '/quizzes/$quizId/review'
      fullPath: '/quizzes/$quizId/review'
      preLoaderRoute: typeof QuizzesQuizIdReviewImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/$quizId/': {
      id: '/quizzes/$quizId/'
      path: '/quizzes/$quizId'
      fullPath: '/quizzes/$quizId'
      preLoaderRoute: typeof QuizzesQuizIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile/$username': typeof ProfileUsernameRoute
  '/quizzes/$quizId/challenge': typeof QuizzesQuizIdChallengeRoute
  '/quizzes/$quizId/review': typeof QuizzesQuizIdReviewRoute
  '/quizzes/$quizId': typeof QuizzesQuizIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile/$username': typeof ProfileUsernameRoute
  '/quizzes/$quizId/challenge': typeof QuizzesQuizIdChallengeRoute
  '/quizzes/$quizId/review': typeof QuizzesQuizIdReviewRoute
  '/quizzes/$quizId': typeof QuizzesQuizIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/profile/$username': typeof ProfileUsernameRoute
  '/quizzes/$quizId/challenge': typeof QuizzesQuizIdChallengeRoute
  '/quizzes/$quizId/review': typeof QuizzesQuizIdReviewRoute
  '/quizzes/$quizId/': typeof QuizzesQuizIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile/$username'
    | '/quizzes/$quizId/challenge'
    | '/quizzes/$quizId/review'
    | '/quizzes/$quizId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile/$username'
    | '/quizzes/$quizId/challenge'
    | '/quizzes/$quizId/review'
    | '/quizzes/$quizId'
  id:
    | '__root__'
    | '/'
    | '/profile/$username'
    | '/quizzes/$quizId/challenge'
    | '/quizzes/$quizId/review'
    | '/quizzes/$quizId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileUsernameRoute: typeof ProfileUsernameRoute
  QuizzesQuizIdChallengeRoute: typeof QuizzesQuizIdChallengeRoute
  QuizzesQuizIdReviewRoute: typeof QuizzesQuizIdReviewRoute
  QuizzesQuizIdIndexRoute: typeof QuizzesQuizIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileUsernameRoute: ProfileUsernameRoute,
  QuizzesQuizIdChallengeRoute: QuizzesQuizIdChallengeRoute,
  QuizzesQuizIdReviewRoute: QuizzesQuizIdReviewRoute,
  QuizzesQuizIdIndexRoute: QuizzesQuizIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/profile/$username",
        "/quizzes/$quizId/challenge",
        "/quizzes/$quizId/review",
        "/quizzes/$quizId/"
      ]
    },
    "/": {
      "filePath": "index.ts"
    },
    "/profile/$username": {
      "filePath": "profile/$username.tsx"
    },
    "/quizzes/$quizId/challenge": {
      "filePath": "quizzes/$quizId/challenge.tsx"
    },
    "/quizzes/$quizId/review": {
      "filePath": "quizzes/$quizId/review.tsx"
    },
    "/quizzes/$quizId/": {
      "filePath": "quizzes/$quizId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
