/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as QuizzesQuizIdIndexImport } from './routes/quizzes/$quizId/index'
import { Route as ProfileUsernameIndexImport } from './routes/profile/$username/index'
import { Route as QuizzesQuizIdReviewIndexImport } from './routes/quizzes/$quizId/review/index'
import { Route as QuizzesQuizIdChallengeIndexImport } from './routes/quizzes/$quizId/challenge/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesQuizIdIndexRoute = QuizzesQuizIdIndexImport.update({
  id: '/quizzes/$quizId/',
  path: '/quizzes/$quizId/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileUsernameIndexRoute = ProfileUsernameIndexImport.update({
  id: '/profile/$username/',
  path: '/profile/$username/',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesQuizIdReviewIndexRoute = QuizzesQuizIdReviewIndexImport.update({
  id: '/quizzes/$quizId/review/',
  path: '/quizzes/$quizId/review/',
  getParentRoute: () => rootRoute,
} as any)

const QuizzesQuizIdChallengeIndexRoute =
  QuizzesQuizIdChallengeIndexImport.update({
    id: '/quizzes/$quizId/challenge/',
    path: '/quizzes/$quizId/challenge/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/profile/$username/': {
      id: '/profile/$username/'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof ProfileUsernameIndexImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/$quizId/': {
      id: '/quizzes/$quizId/'
      path: '/quizzes/$quizId'
      fullPath: '/quizzes/$quizId'
      preLoaderRoute: typeof QuizzesQuizIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/$quizId/challenge/': {
      id: '/quizzes/$quizId/challenge/'
      path: '/quizzes/$quizId/challenge'
      fullPath: '/quizzes/$quizId/challenge'
      preLoaderRoute: typeof QuizzesQuizIdChallengeIndexImport
      parentRoute: typeof rootRoute
    }
    '/quizzes/$quizId/review/': {
      id: '/quizzes/$quizId/review/'
      path: '/quizzes/$quizId/review'
      fullPath: '/quizzes/$quizId/review'
      preLoaderRoute: typeof QuizzesQuizIdReviewIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile/$username': typeof ProfileUsernameIndexRoute
  '/quizzes/$quizId': typeof QuizzesQuizIdIndexRoute
  '/quizzes/$quizId/challenge': typeof QuizzesQuizIdChallengeIndexRoute
  '/quizzes/$quizId/review': typeof QuizzesQuizIdReviewIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile/$username': typeof ProfileUsernameIndexRoute
  '/quizzes/$quizId': typeof QuizzesQuizIdIndexRoute
  '/quizzes/$quizId/challenge': typeof QuizzesQuizIdChallengeIndexRoute
  '/quizzes/$quizId/review': typeof QuizzesQuizIdReviewIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/profile/$username/': typeof ProfileUsernameIndexRoute
  '/quizzes/$quizId/': typeof QuizzesQuizIdIndexRoute
  '/quizzes/$quizId/challenge/': typeof QuizzesQuizIdChallengeIndexRoute
  '/quizzes/$quizId/review/': typeof QuizzesQuizIdReviewIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile/$username'
    | '/quizzes/$quizId'
    | '/quizzes/$quizId/challenge'
    | '/quizzes/$quizId/review'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile/$username'
    | '/quizzes/$quizId'
    | '/quizzes/$quizId/challenge'
    | '/quizzes/$quizId/review'
  id:
    | '__root__'
    | '/'
    | '/profile/$username/'
    | '/quizzes/$quizId/'
    | '/quizzes/$quizId/challenge/'
    | '/quizzes/$quizId/review/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileUsernameIndexRoute: typeof ProfileUsernameIndexRoute
  QuizzesQuizIdIndexRoute: typeof QuizzesQuizIdIndexRoute
  QuizzesQuizIdChallengeIndexRoute: typeof QuizzesQuizIdChallengeIndexRoute
  QuizzesQuizIdReviewIndexRoute: typeof QuizzesQuizIdReviewIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileUsernameIndexRoute: ProfileUsernameIndexRoute,
  QuizzesQuizIdIndexRoute: QuizzesQuizIdIndexRoute,
  QuizzesQuizIdChallengeIndexRoute: QuizzesQuizIdChallengeIndexRoute,
  QuizzesQuizIdReviewIndexRoute: QuizzesQuizIdReviewIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/profile/$username/",
        "/quizzes/$quizId/",
        "/quizzes/$quizId/challenge/",
        "/quizzes/$quizId/review/"
      ]
    },
    "/": {
      "filePath": "index.ts"
    },
    "/profile/$username/": {
      "filePath": "profile/$username/index.tsx"
    },
    "/quizzes/$quizId/": {
      "filePath": "quizzes/$quizId/index.tsx"
    },
    "/quizzes/$quizId/challenge/": {
      "filePath": "quizzes/$quizId/challenge/index.tsx"
    },
    "/quizzes/$quizId/review/": {
      "filePath": "quizzes/$quizId/review/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
